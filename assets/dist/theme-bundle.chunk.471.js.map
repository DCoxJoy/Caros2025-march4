{"version":3,"file":"theme-bundle.chunk.471.js","mappings":"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","sources":["webpack://bigcommerce-caros/./assets/js/theme/search.js"],"sourcesContent":["import { hooks } from '@bigcommerce/stencil-utils';\nimport CatalogPage from './catalog';\nimport FacetedSearch from './common/faceted-search';\nimport compareProducts from './global/compare-products';\nimport urlUtils from './common/url-utils';\nimport Url from 'url';\nimport collapsibleFactory from './common/collapsible';\nimport 'jstree';\nimport nod from './common/nod';\n\nexport default class Search extends CatalogPage {\n    formatCategoryTreeForJSTree(node) {\n        const nodeData = {\n            text: node.data,\n            id: node.metadata.id,\n            state: {\n                selected: node.selected,\n            },\n        };\n\n        if (node.state) {\n            nodeData.state.opened = node.state === 'open';\n            nodeData.children = true;\n        }\n\n        if (node.children) {\n            nodeData.children = [];\n            node.children.forEach((childNode) => {\n                nodeData.children.push(this.formatCategoryTreeForJSTree(childNode));\n            });\n        }\n\n        return nodeData;\n    }\n\n    showProducts() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'product',\n        });\n\n        this.$productListingContainer.removeClass('u-hiddenVisually');\n        this.$facetedSearchContainer.removeClass('u-hiddenVisually');\n        this.$contentResultsContainer.addClass('u-hiddenVisually');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-content-results-toggle]').addClass('navBar-action');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action');\n        $('[data-product-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    showContent() {\n        const url = urlUtils.replaceParams(window.location.href, {\n            section: 'content',\n        });\n\n        this.$contentResultsContainer.removeClass('u-hiddenVisually');\n        this.$productListingContainer.addClass('u-hiddenVisually');\n        this.$facetedSearchContainer.addClass('u-hiddenVisually');\n\n        $('[data-product-results-toggle]').removeClass('navBar-action-color--active');\n        $('[data-product-results-toggle]').addClass('navBar-action');\n\n        $('[data-content-results-toggle]').removeClass('navBar-action');\n        $('[data-content-results-toggle]').addClass('navBar-action-color--active');\n\n        urlUtils.goToUrl(url);\n    }\n\n    onReady() {\n        compareProducts(this.context.urls);\n\n        const $searchForm = $('[data-advanced-search-form]');\n        const $categoryTreeContainer = $searchForm.find('[data-search-category-tree]');\n        const url = Url.parse(window.location.href, true);\n        const treeData = [];\n        this.$productListingContainer = $('#product-listing-container');\n        this.$facetedSearchContainer = $('#faceted-search-container');\n        this.$contentResultsContainer = $('#search-results-content');\n\n        // Init faceted search\n        if ($('#facetedSearch').length > 0) {\n            this.initFacetedSearch();\n        } else {\n            this.onSortBySubmit = this.onSortBySubmit.bind(this);\n            hooks.on('sortBy-submitted', this.onSortBySubmit);\n        }\n\n        // Init collapsibles\n        collapsibleFactory();\n\n        $('[data-product-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showProducts();\n        });\n\n        $('[data-content-results-toggle]').on('click', event => {\n            event.preventDefault();\n            this.showContent();\n        });\n\n        if (this.$productListingContainer.find('li.product').length === 0 || url.query.section === 'content') {\n            this.showContent();\n        } else {\n            this.showProducts();\n        }\n\n        const validator = this.initValidation($searchForm)\n            .bindValidation($searchForm.find('#search_query_adv'));\n\n        this.context.categoryTree.forEach((node) => {\n            treeData.push(this.formatCategoryTreeForJSTree(node));\n        });\n\n        this.categoryTreeData = treeData;\n        this.createCategoryTree($categoryTreeContainer);\n\n        $searchForm.on('submit', event => {\n            const selectedCategoryIds = $categoryTreeContainer.jstree().get_selected();\n\n            if (!validator.check()) {\n                return event.preventDefault();\n            }\n\n            $searchForm.find('input[name=\"category\\[\\]\"]').remove();\n\n            for (const categoryId of selectedCategoryIds) {\n                const input = $('<input>', {\n                    type: 'hidden',\n                    name: 'category[]',\n                    value: categoryId,\n                });\n\n                $searchForm.append(input);\n            }\n        });\n    }\n\n    loadTreeNodes(node, cb) {\n        $.ajax({\n            url: '/remote/v1/category-tree',\n            data: {\n                selectedCategoryId: node.id,\n                prefix: 'category',\n            },\n            headers: {\n                'x-xsrf-token': window.BCData && window.BCData.csrf_token ? window.BCData.csrf_token : '',\n            },\n        }).done(data => {\n            const formattedResults = [];\n\n            data.forEach((dataNode) => {\n                formattedResults.push(this.formatCategoryTreeForJSTree(dataNode));\n            });\n\n            cb(formattedResults);\n        });\n    }\n\n    createCategoryTree($container) {\n        const treeOptions = {\n            core: {\n                data: (node, cb) => {\n                    // Root node\n                    if (node.id === '#') {\n                        cb(this.categoryTreeData);\n                    } else {\n                        // Lazy loaded children\n                        this.loadTreeNodes(node, cb);\n                    }\n                },\n                themes: {\n                    icons: true,\n                },\n            },\n            checkbox: {\n                three_state: false,\n            },\n            plugins: [\n                'checkbox',\n            ],\n        };\n\n        $container.jstree(treeOptions);\n    }\n\n    initFacetedSearch() {\n        const $productListingContainer = $('#product-listing-container');\n        const $facetedSearchContainer = $('#faceted-search-container');\n        const $searchHeading = $('#search-results-heading');\n        const $searchCount = $('#search-results-product-count');\n        const productsPerPage = this.context.searchProductsPerPage;\n        const requestOptions = {\n            template: {\n                productListing: 'search/product-listing',\n                sidebar: 'search/sidebar',\n                heading: 'search/heading',\n                productCount: 'search/product-count',\n            },\n            config: {\n                product_results: {\n                    limit: productsPerPage,\n                },\n            },\n            showMore: 'search/show-more',\n        };\n\n        this.facetedSearch = new FacetedSearch(requestOptions, (content) => {\n            $productListingContainer.html(content.productListing);\n            $facetedSearchContainer.html(content.sidebar);\n            $searchHeading.html(content.heading);\n            $searchCount.html(content.productCount);\n\n            $('html, body').animate({\n                scrollTop: 0,\n            }, 100);\n        });\n    }\n\n    initValidation($form) {\n        this.$form = $form;\n        this.validator = nod({\n            submit: $form,\n        });\n\n        return this;\n    }\n\n    bindValidation($element) {\n        if (this.validator) {\n            this.validator.add({\n                selector: $element,\n                validate: 'presence',\n                errorMessage: $element.data('errorMessage'),\n            });\n        }\n\n        return this;\n    }\n\n    check() {\n        if (this.validator) {\n            this.validator.performCheck();\n            return this.validator.areAll('valid');\n        }\n\n        return false;\n    }\n}\n"],"names":["Search","_CatalogPage","apply","arguments","_proto","prototype","formatCategoryTreeForJSTree","node","_this","nodeData","text","data","id","metadata","state","selected","opened","children","forEach","childNode","push","showProducts","url","urlUtils","replaceParams","window","location","href","section","this","$productListingContainer","removeClass","$facetedSearchContainer","$contentResultsContainer","addClass","$","goToUrl","showContent","onReady","_this2","compareProducts","context","urls","$searchForm","$categoryTreeContainer","find","Url","treeData","length","initFacetedSearch","onSortBySubmit","bind","hooks","on","collapsibleFactory","event","preventDefault","query","validator","initValidation","bindValidation","categoryTree","categoryTreeData","createCategoryTree","selectedCategoryIds","jstree","get_selected","check","remove","_step","_iterator","_createForOfIteratorHelperLoose","done","categoryId","value","input","type","name","append","loadTreeNodes","cb","_this3","ajax","selectedCategoryId","prefix","headers","BCData","csrf_token","formattedResults","dataNode","$container","_this4","treeOptions","core","themes","icons","checkbox","three_state","plugins","$searchHeading","$searchCount","requestOptions","template","productListing","sidebar","heading","productCount","config","product_results","limit","searchProductsPerPage","showMore","facetedSearch","FacetedSearch","content","html","animate","scrollTop","$form","nod","submit","$element","add","selector","validate","errorMessage","performCheck","areAll","CatalogPage"],"sourceRoot":""}